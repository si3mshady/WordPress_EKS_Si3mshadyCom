    shell(''' 
            if [ eksctl create cluster -f base-wordpress-cluster*dev.yml = 0 ]; then echo '0'; else echo '1'; fi 

            if [ kubectl create namespace eks-wordpress-si3mshady-dev ]; then echo '0'; else echo '1'; fi  


            if [ kubectl apply -f ./wp_storage_class*dev.yml --namespace=eks-wordpress-si3mshady-dev ]; then echo '0'; else echo '1'; fi  
                             
            if [ kubectl patch storageclass gp2 -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}' \
            --namespace=eks-wordpress-si3mshady-dev ]; then echo '0'; else echo '1'; fi  

            if [ kubectl apply -f ./persistent_volume_claim*dev.yml --namespace=eks-wordpress-si3mshady-dev ]; then echo '0'; else echo '1'; fi  
                         
            if [  kubectl apply -f ./mysql_deployment*dev.yml --namespace=eks-wordpress-si3mshady-dev ]; then echo '0'; else echo '1'; fi 

            if [ kubectl apply -f ./wordpress_deployment*dev.yml --namespace=eks-wordpress-si3mshady-dev ]; then echo '0'; else echo '1'; fi 
                     

            namespace=$(kubectl get ns  | grep -i dev |  awk '{print $1}') || true  && echo 'pass' && \\ 
            loadBalancerDEV=$(kubectl get svc --namespace=$namespace | grep LoadBalancer | awk '{print $4}') || true && echo 'pass' && \\

            sed -i 's/"service.si3mshady.com"/"dev.service.si3mshady.com"/g' CNAME.json || true && echo 'pass'  && \\
            sed -i 's/"\$loadBalancerURL"/"\$loadBalancerDEV"/g' CNAME.json  || true && echo 'pass'  && \\

            aws route53 change-resource-record-sets \
            --hosted-zone-id Z099267523KVY5EITOQ5W \
            --change-batch file://CNAME.json                           
                      
        ''')
